---

import LoadItemSearch from "./LoadItemSearch.astro";
import { searchterms } from "../SearchEngine/searchs.js";
---

<style>
  /* My Notes =>  */
  @import url("https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;0,800;1,300;1,400;1,600;1,700;1,800&display=swap");
  @import url("https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,400;0,700;1,400;1,700&family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;0,800;1,300;1,400;1,600;1,700;1,800&display=swap");
  @import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");
  @import url("https://fonts.googleapis.com/css2?family=PT+Sans:wght@700&display=swap");
  @font-face {
    font-family: "ps-bold";
    src: url(../fonts/ps-bold.ttf);
  }
  :root {
    --gray-i: #71757a;
    --white-i: #ffffff;
    --primary-color: #82c7ff; /* Added primary color variable for easy customization */
    --hover-bg: rgba(200, 200, 200, 0.3);
    --background-color: #1B1A19; /* Blue-gray color */
  }
  
  * {
    padding: 0;
    margin: 0;
  }
  
  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }
  
  html {
    box-sizing: border-box;
    font-size: 62.5%;
    /* 1rem => 10px */
  }
  
  a {
    color: var(--white-i);
  }
  
  h3 {
    text-decoration: underline;
    font-weight: bold;
  }
  
  body {
    font-size: 16px;
    /* Default Font Size => 16px */
    font-family: "Open Sans", sans-serif;
    margin: 0;
    padding: 0;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    overflow-x: hidden;
    background-color: var(--background-color); /* Set background color */
  }

    

    
      .sub-result-container {
        display: flex;
        flex-direction: column;
        flex-wrap: wrap;
        margin: 1.5rem 0 !important;
      }
    
      .sub-result-item {
        font-size: 0.85em;
        display: block !important;
        width: 100% !important;
        margin: 1rem 0 !important;
        border-top: 0.5px solid #dfe1e5;
        padding: 1.5rem 0.5rem; /* Increased padding for top/bottom */
        margin: 0 !important;
    }
    
      .sub-result-item p {
        display: none !important;
      }
    
      .material-icons-outlined.chevron_right {
        right: -1.5rem !important;
      }
    
      .sub-result-container__articles {
        padding-right: 0 !important;
      }
    
      .sub-result-container__article {
        width: 32% !important;
      }
    
      main {
        width: 100% !important;
        padding: 1.2rem 3rem !important;
      }
    
      .arrow-triangle-icon {
        display: none !important;
      }
    
      .bottom-header nav {
        width: 100vw !important;
        margin-left: 1.2rem !important;
        margin-right: 1.2rem !important;
      }
    
      .top-footer,
    .bottom-footer {
        padding-left: 1.2rem !important;
        padding-right: 1.2rem !important;
      }
    
     
    
    
    header {
      padding: 2.5rem 2rem 0;
    }
    header .top-header {
      display: flex;
      justify-content: space-between;
      height: fit-content;
    }
    header .top-header__left-sec {
      display: flex;
      align-items: center;
    }
    header .top-header__left-sec a {
      text-decoration: none;
    }
    header .top-header__left-sec .menu-bar-icon {
      display: none;
      margin-right: 1rem;
      color: var(--gray-i);
      padding: 0.5rem;
    }
    header .top-header__left-sec #google-logo {
      display: flex;
    }
    header .top-header__left-sec #google-logo img {
      height: 4rem;
      width: 50%;
      object-fit: contain;
    }
    header .top-header__left-sec .search-container {
      width: 45vw;
      height: 4.6rem;
      padding: 1rem;
      padding-left: 2rem;
      border-radius: 10rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 0.2em 7px rgba(0, 0, 0, 0.17);
      background-color: #484644;
    }
    header .top-header__left-sec .search-container:hover {
      box-shadow: 0 0.2em 7px rgba(0, 0, 0, 0.17), 0 -0.05em 6px rgba(0, 0, 0, 0.1);
    }
    header .top-header__left-sec .search-container span,
    header .top-header__left-sec .search-container i {
      color: var(--gray-i);
    }
    header .top-header__left-sec .search-container .search-container__left-sec {
      display: flex;
      justify-content: flex-start;
      align-items: center;
      width: 100%;
      height: 100%;
      
    }
    header .top-header__left-sec .search-container .search-container__left-sec #inp--searchbox {
      width: 100%;
      font-family: "Noto Sans", sans-serif;
      font-size: 0.95em;
      border: none;
      margin: 0;
      padding: 0;
    }
    header .top-header__left-sec .search-container .search-container__left-sec #inp--searchbox:focus {
      outline: none;
    }
    header .top-header__left-sec .search-container .search-container__left-sec input[type=search]::-webkit-search-cancel-button {
      display: none;
    }
    header .top-header__left-sec .search-container .search-container__left-sec .search-container__left-sec--srch-icon {
      display: none;
      font-size: 1.3em;
      opacity: 0.8;
      margin-right: 0.75rem;
      margin-left: -0.9rem;
    }
    header .top-header__left-sec .search-container .search-container__right-sec {
      display: flex;
    }
    header .top-header__left-sec .search-container .search-container__right-sec * {
      margin: 0 0.25em;
      cursor: pointer;
    }
    header .top-header__left-sec .search-container .search-container__right-sec :first-child {
      color: #585a5c;
    }
    header .top-header__left-sec .search-container .search-container__right-sec :nth-child(2) {
      color: #d6aa34;
    }
    header .top-header__left-sec .search-container .search-container__right-sec :last-child {
      color: #7198f5;
    }
    header .top-header__left-sec .search-container:focus-within .search-container__left-sec--srch-icon {
      display: block;
    }
    header .top-header__right-sec {
      display: flex;
      align-items: center;
    }
    header .top-header__right-sec .top-header__right-sec--apps {
      width: 4rem;
      height: 4rem;
      border-radius: 100%;
      margin-right: 1.3rem;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 0.7rem;
      fill: #585a5c;
    }
    
    .dots{
      font-size: 18px !important;
      color: #606368;
    }
    header .top-header__right-sec .top-header__right-sec--user-acc {
      width: 4rem;
      height: 4rem;
      overflow: hidden;
      border-radius: 100%;
    }
    header .top-header__right-sec .top-header__right-sec--user-acc img {
      width: 100%;
    }
    header .top-header__right-sec > :hover {
      box-shadow: 0 0 0 4px rgba(200, 200, 200, 0.3);
      cursor: pointer;
      background-color: rgba(200, 200, 200, 0.3);
    }
    header .bottom-header {
      margin: auto -2rem;
      margin-top: 2.5rem;
      border-bottom: 0.5px solid rgba(200, 200, 200, 0.5);
    }
    header .bottom-header nav {
      width: 45vw;
      margin-left: 12.5vw;
      display: flex;
      justify-content: space-between;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    header .bottom-header nav li {
      list-style-type: none;
      margin-right: 1em;
      padding: 0.7rem 0.5rem;
      
    }
    header .bottom-header nav li .material-icons,
    header .bottom-header nav li .material-icons-outlined {
      font-size: 18px;
    }
    
    header .bottom-header nav li a {
      display: flex;
      color: #606368;
      text-decoration: none;
      align-items: center;
      font-size: 0.9em;
      justify-content: center;
    }
    header .bottom-header nav li a :first-child {
      margin-right: 0.3em;
    }
    header .bottom-header nav .bottom-header__left-sec {
      margin-right: 5rem;
    }
    header .bottom-header nav .bottom-header__left-sec ul {
      display: flex;
    }
    header .bottom-header nav .bottom-header__right-sec ul {
      display: flex;
    }
    header .bottom-header nav .active-page {
      border-bottom: 4px solid #82c7ff;
    }
    
    main {
      display: flex;
      flex-direction: row;
      width: 85%;
      max-width: 1920px;
      font-family: "Roboto", sans-serif;
      padding: 1rem 5.5vw;
      color: var(--white-i);
    }
    main .right-sidebar {
      margin: 5rem 0 0 5rem;
      color: #4e5156;
      width: 130rem;
      height: fit-content;
      border: 0.5px solid #dfe1e5;
      border-radius: 1rem;
      display: flex;
      flex-direction: column;
      overflow: hidden;
    }
    main .right-sidebar a {
      color: #2900aa;
    }
    main .right-sidebar a:hover {
      text-decoration: underline;
    }
    main .right-sidebar > * {
      padding: 1.5rem;
    }
    main .right-sidebar > *:nth-child(1),
    main .right-sidebar > *:nth-child(2) {
      border-bottom: 0.5px solid #dfe1e5;
    }
    main .right-sidebar .h2-inline-block {
      display: inline-block;
    }
    main .right-sidebar .h2-inline-block + a {
      color: #71757a;
      padding-top: 0.7rem;
    }
    .search-container__left-sec {
      position: relative;
      width: 100%;
    }

    .autocomplete-list {
      position: absolute;
      top: 100%; /* Puts it directly below the input */
      left: 0;
      width: 100%;
      background-color: #484644;
      color: white;
      z-index: 1000;
      max-height: 250px;
      overflow-y: auto;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      border-radius: 0 0 8px 8px;
    }
    
    .autocomplete-item {
        padding: 10px;
        cursor: pointer;
        color: white !important;

    }
    .autocomplete-item:hover {
        background-color: #665151;
    }

    .related-searches {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin-top: 2rem;
          }

          .related-search-button {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 1rem 2rem;
            border: 1px solid #dfe1e5;
            border-radius: 10rem;
            background-color: #545250  ;
            font-family: "Roboto", sans-serif;
            font-size: 0.9em;
            color: var(--white-i);
            cursor: pointer;
            box-shadow: 0 0.2em 7px rgba(0, 0, 0, 0.1);
            transition: box-shadow 0.2s ease, background-color 0.2s ease;
          }

          .related-search-button:hover {
            box-shadow: 0 0.2em 7px rgba(0, 0, 0, 0.17), 0 -0.05em 6px rgba(0, 0, 0, 0.1);
            background-color: var(--hover-bg);
          }

    

      </style>
 <script>
    import { parseKeywords } from '../SearchEngine/searchfilter.js';
    import { searchterms } from '../SearchEngine/searchs.js';
        const items = searchterms;

        function showSuggestions(query) {
    const autocompleteList = document.getElementById('autocompleteList');
    autocompleteList.innerHTML = '';

    if (query.length === 0) {
        return;
    }

    console.log('Hello, this is a message from the console!');
    console.log('this is the query ', query);
    console.log('this is the items ', items);

    // Filter suggestions based on the query
    const suggestions = items.filter(item => item.toLowerCase().includes(query.toLowerCase()));

    // Limit the suggestions to 6 results
    const limitedSuggestions = suggestions.slice(0, 6);

    // Loop through the limited suggestions and display them
    limitedSuggestions.forEach(suggestion => {
        const item = document.createElement('div');
        item.className = 'autocomplete-item';
        item.textContent = suggestion;

        item.onclick = () => {
            const searchInput = document.getElementById('inp--searchbox');
            if (searchInput instanceof HTMLInputElement) {
                searchInput.value = suggestion;
            }
            autocompleteList.innerHTML = ''; // Clear the suggestions after selection
        };

        autocompleteList.appendChild(item);
    });
}

function executeSearch() {
            const keywords = ["news", "genesis", "stock", "company", "other", "articles", "reddit", "vanguard", "madrigal", "lone"];
            const basePath = import.meta.env.PROD ? '/Genesis/' : '/';
            console.log('Ran Search!');
            
            const searchInput = document.getElementById('inp--searchbox');
            
            // Ensure searchInput is a valid HTMLInputElement
            if (!(searchInput instanceof HTMLInputElement)) {
                console.error("Search input is not a valid HTML input element.");
                return;
            }

            const query = searchInput.value;
            
            // Calling parseKeywords with the value of the input field
            var keyLog = parseKeywords(query, keywords);
            console.log('This is the keyLog:', keyLog);
            
            if (keyLog != '') {
        switch (true) {
            case keyLog.includes("genesis") && (keyLog.includes("news") || keyLog.includes("articles")) && keyLog.includes("stock") && keyLog.includes("company") && keyLog.includes("reddit") && keyLog.includes("other"):
                window.location.href = `${basePath}searchresult?section1=show&section2=show&section3=show&section4=show&section5=show&section6=show`;
                break;
            case keyLog.includes("genesis") && (keyLog.includes("news") || keyLog.includes("articles")) && keyLog.includes("stock") && keyLog.includes("company") && keyLog.includes("reddit"):
                window.location.href = `${basePath}searchresult?section1=show&section2=show&section3=show&section4=show&section5=show`;
                break;
            case keyLog.includes("genesis") && (keyLog.includes("news") || keyLog.includes("articles")) && keyLog.includes("stock") && keyLog.includes("company"):
                window.location.href = `${basePath}searchresult?section1=show&section2=show&section3=show&section4=show`;
                break;
            case keyLog.includes("genesis") && (keyLog.includes("news") || keyLog.includes("articles")) && keyLog.includes("stock"):
                window.location.href = `${basePath}searchresult?section1=show&section2=show&section3=show`;
                break;
            case keyLog.includes("genesis") && (keyLog.includes("news") || keyLog.includes("articles")):
                window.location.href = `${basePath}searchresult?section1=show&section2=show`;
                break;
            case keyLog.includes("genesis") && keyLog.includes("stock"):
                window.location.href = `${basePath}searchresult?section1=show&section3=show`;
                break;
            case keyLog.includes("genesis") && keyLog.includes("company"):
                window.location.href = `${basePath}searchresult?section1=show&section4=show`;
                break;
            case keyLog.includes("genesis") && keyLog.includes("reddit"):
                window.location.href = `${basePath}searchresult?section1=show&section5=show`;
                break;
            case keyLog.includes("genesis") && keyLog.includes("other"):
                window.location.href = `${basePath}searchresult?section1=show&section6=show`;
                break;
            case keyLog.includes("genesis") && (keyLog.includes("news") || keyLog.includes("articles")) && keyLog.includes("reddit"):
                window.location.href = `${basePath}searchresult?section1=show&section2=show&section5=show`;
                break;
            case keyLog.includes("genesis") && keyLog.includes("stock") && keyLog.includes("reddit"):
                window.location.href = `${basePath}searchresult?section1=show&section3=show&section5=show`;
                break;
            case keyLog.includes("genesis") && keyLog.includes("company") && keyLog.includes("reddit"):
                window.location.href = `${basePath}searchresult?section1=show&section4=show&section5=show`;
                break;
            case keyLog.includes("genesis") && keyLog.includes("other") && keyLog.includes("reddit"):
                window.location.href = `${basePath}searchresult?section1=show&section6=show&section5=show`;
                break;
            case keyLog.includes("stock") && keyLog.includes("company") && keyLog.includes("reddit"):
                window.location.href = `${basePath}searchresult?section3=show&section4=show&section5=show`;
                break;
            case keyLog.includes("stock") && keyLog.includes("company") && keyLog.includes("other"):
                window.location.href = `${basePath}searchresult?section3=show&section4=show&section6=show`;
                break;
            case keyLog.includes("stock") && keyLog.includes("company") && (keyLog.includes("news") || keyLog.includes("articles")):
                window.location.href = `${basePath}searchresult?section3=show&section4=show&section2=show`;
                break;
            case keyLog.includes("stock") && keyLog.includes("other") && (keyLog.includes("news") || keyLog.includes("articles")):
                window.location.href = `${basePath}searchresult?section3=show&section6=show&section2=show`;
                break;
            case keyLog.includes("stock") && keyLog.includes("company"):
                window.location.href = `${basePath}searchresult?section3=show&section4=show`;
                break;
            case keyLog.includes("stock") && keyLog.includes("other"):
                window.location.href = `${basePath}searchresult?section3=show&section6=show`;
                break;
            case keyLog.includes("stock") && (keyLog.includes("news") || keyLog.includes("articles")):
                window.location.href = `${basePath}searchresult?section3=show&section2=show`;
                break;
            case keyLog.includes("company") && (keyLog.includes("news") || keyLog.includes("articles")):
                window.location.href = `${basePath}searchresult?section4=show&section2=show`;
                break;
            case keyLog.includes("company") && keyLog.includes("reddit"):
                window.location.href = `${basePath}searchresult?section4=show&section5=show`;
                break;
            case keyLog.includes("company") && keyLog.includes("other"):
                window.location.href = `${basePath}searchresult?section4=show&section6=show`;
                break;
            case keyLog.includes("genesis"):
                window.location.href = `${basePath}searchresult?section1=show`;
                break;
            case keyLog.includes("stock"):
                window.location.href = `${basePath}searchresult?section3=show`;
                break;
            case keyLog.includes("company"):
                window.location.href = `${basePath}searchresult?section4=show`;
                break;
            case keyLog.includes("other"):
                window.location.href = `${basePath}searchresult?section6=show`;
                break;
            case keyLog.includes("reddit"):
                window.location.href = `${basePath}searchresult?section5=show`;
                break;
            case keyLog.includes("news") || keyLog.includes("articles"):
                window.location.href = `${basePath}searchresult?section2=show`;
                break;
            case keyLog.includes("genesis") && keyLog.includes("vanguard"):
                window.location.href = `${basePath}searchresult?section1=show&section8=show`;
                break;
            case keyLog.includes("genesis") && keyLog.includes("madrigal"):
                window.location.href = `${basePath}searchresult?section1=show&section9=show`;
                break;
            case keyLog.includes("genesis") && keyLog.includes("star"):
                window.location.href = `${basePath}searchresult?section1=show&section10=show`;
                break;
            case keyLog.includes("vanguard"):
                window.location.href = `${basePath}searchresult?section8=show`;
                break;
            case keyLog.includes("madrigal"):
                window.location.href = `${basePath}searchresult?section9=show`;
                break;
            case keyLog.includes("star"):
                window.location.href = `${basePath}searchresult?section10=show`;
                break;
            default:
                window.location.href = `${basePath}searchresult?section7=show`;
                break;
        }
    }

}

        document.addEventListener('DOMContentLoaded', () => {
            const searchButton = document.getElementById('searchbutton');
            searchButton.addEventListener('click', executeSearch);
        });

        document.addEventListener('DOMContentLoaded', () => {
            // Ensure showSuggestions runs when the input is focused
            document.getElementById('inp--searchbox').addEventListener('focus', (event) => {
                const target = event.target;
                if (target instanceof HTMLInputElement) {
                    showSuggestions(target.value);
                }
            });
        });
                // Event listener for input changes
                document.getElementById('inp--searchbox').addEventListener('input', (event) => {
            showSuggestions(event.target.value);
        });

        document.addEventListener('DOMContentLoaded', () => {
            const relatedSearchButtons = document.querySelectorAll('.related-search-button');
            relatedSearchButtons.forEach(button => {
              button.addEventListener('click', () => {
          const term = button.getAttribute('data-term');
          const searchInput = document.getElementById('inp--searchbox');
          if (searchInput instanceof HTMLInputElement) {
            searchInput.value = term;  // Set the term as the search query
          }
          executeSearch();  // Execute the search after setting the value
              });
            });
          });

        const searchInput = document.getElementById('inp--searchbox');
        searchInput.addEventListener('input', (event) => {
            const inputElement = event.target;
            const value = inputElement.value;
            console.log(`You typed: ${value}`);
            showSuggestions(value);
        });

        // Add event listener for Enter key
        searchInput.addEventListener('keydown', (event) => {
            if (event.key === 'Enter') {
                event.preventDefault(); // Prevent default form submission behavior
                executeSearch();
            }
        });


  </script>
<html lang="en">
    
  <head>
    <meta name="description" content="Page description" />
    <meta name="theme-color" content="#000" />
    <title>Google Search Results Page</title>
    

    <link rel="icon" href="https://imagepng.org/wp-content/uploads/2019/08/google-icon.png" type="image/x-icon">
    <link rel="shortcut icon" href="https://imagepng.org/wp-content/uploads/2019/08/google-icon.png" type="image/x-icon">



    <link rel="stylesheet" href="styles.css" />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/icon?family=Material+Icons"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Material+Icons+Outlined"
      rel="stylesheet"
    />
  </head>
  <body>
    <header>
      <div class="top-header">
        <div class="top-header__left-sec">
          <span class="material-icons-outlined menu-bar-icon"> menu </span>
          <a href="/" id="google-logo" title="Go to Google Home">
            <img
              src="https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_92x30dp.png"
              alt=""
            />
          </a>
          <div class="search-container">
            <div class="search-container__left-sec">
              <span class="material-icons search-container__left-sec--srch-icon"></span>
              <input
                type="search"
                name="search"
                id="inp--searchbox"
                autocomplete="on"
                placeholder="Search..."
                oninput="showSuggestions(this.value)"
                style="background-color:#484644; color: white;"
              />
              <div id="autocompleteList" class="autocomplete-list"></div>
            </div>
            <div class="search-container__right-sec">
              <button class="material-icons" id='searchbutton' onclick="executeSearch()">search</button>
            </div>
          </div>
          
        </div>

        <div id="autocompleteList" class="autocomplete-list"></div>

        <div class="top-header__right-sec">
          <div class="top-header__right-sec--apps">
            <svg class="gb_We" focusable="false" viewBox="0 0 24 24">
              <path
                d="M6,8c1.1,0 2,-0.9 2,-2s-0.9,-2 -2,-2 -2,0.9 -2,2 0.9,2 2,2zM12,20c1.1,0 2,-0.9 2,-2s-0.9,-2 -2,-2 -2,0.9 -2,2 0.9,2 2,2zM6,20c1.1,0 2,-0.9 2,-2s-0.9,-2 -2,-2 -2,0.9 -2,2 0.9,2 2,2zM6,14c1.1,0 2,-0.9 2,-2s-0.9,-2 -2,-2 -2,0.9 -2,2 0.9,2 2,2zM12,14c1.1,0 2,-0.9 2,-2s-0.9,-2 -2,-2 -2,0.9 -2,2 0.9,2 2,2zM16,6c0,1.1 0.9,2 2,2s2,-0.9 2,-2 -0.9,-2 -2,-2 -2,0.9 -2,2zM12,8c1.1,0 2,-0.9 2,-2s-0.9,-2 -2,-2 -2,0.9 -2,2 0.9,2 2,2zM18,14c1.1,0 2,-0.9 2,-2s-0.9,-2 -2,-2 -2,0.9 -2,2 0.9,2 2,2zM18,20c1.1,0 2,-0.9 2,-2s-0.9,-2 -2,-2 -2,0.9 -2,2 0.9,2 2,2z"
              ></path>
            </svg>
          </div>
        </div>
      </div>
      <div class="bottom-header">
        <nav>
          <div class="bottom-header__left-sec">
            <ul>
              <li class="active-page">
                <a href="#"><span class="material-icons">search</span>All</a>
              </li>
              <li>
                <a href="404">
                  <span class="material-icons-outlined"> article </span>
                  News</a
                >
              </li>
              <li>
                <a href="404">
                  <span class="material-icons-outlined"> book </span>
                  Books</a
                >
              </li>
              <li>
                <a href="404">
                  <span class="material-icons-outlined"> smart_display </span>
                  Videos</a
                >
              </li>
              <li>
                <a href="404">
                  <span class="material-icons-outlined"> image </span>
                  Images</a
                >
              </li>

            </ul>
          </div>

        </nav>
      </div>
    </header>

    <main>
      <div class="main-container">
        <div class="search-delay">
          About 1,000,000 results (0.513 seconds)
        </div>


        <LoadItemSearch />

        Related searches from google search results

        <div class="related-searches">
          {searchterms.sort(() => 0.5 - Math.random()).slice(0, 8).map((term) => (
            <button 
              class="related-search-button" 
              data-term={term}  // Store the term in a data attribute
            >
              {term}
            </button>
          ))}
        </div>

      </div>


    </main>



 

</body>
</html>