
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>

        h1 {
            font-size: 2.5em;
            text-align: center;
            color: #333;
            font-weight: bold;
        }
        .container22 {
            padding: 20px;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 20px;
        }
        .stock-info {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            width: calc(33.333% - 20px);
            box-sizing: border-box;
            transition: transform 0.3s ease;
        }
        .stock-info:hover {
            transform: translateY(-10px);
        }
        .stock-info h2 {
            margin: 0;
            font-size: 1.6em;
            color: #333;
        }
        .stock-info p {
            margin: 5px 0;
            font-size: 1.2em;
            color: #555;
        }
        .stock-info .positive {
            color: green;
        }
        .stock-info .negative {
            color: red;
        }
        @media screen and (max-width: 768px) {
            .stock-info {
                width: calc(50% - 20px);
            }
        }
        @media screen and (max-width: 480px) {
            .stock-info {
                width: 100%;
            }
        }
    </style>
</head>

<div>
    <h1>Our Top <span style="color: rgb(0, 172, 46);">Watches</span></h1>
</div>
    <div class="container22" id="stockContainer">
        <!-- Stock info will be dynamically inserted here -->
    </div>
    <div>
        <h1>The Weekly <span style="color: rgb(0, 172, 46);">Watch</span></h1>
    </div>
    <script>
        // Simulating stock data update
        const stockData = [
            { name: 'Stock A', price: 100, change: +2 },
            { name: 'Stock B', price: 200, change: -1 },
            { name: 'Stock C', price: 300, change: +0.5 },
            { name: 'Stock D', price: 400, change: -0.2 },
            { name: 'Stock A', price: 100, change: +2 },
            { name: 'Stock B', price: 200, change: -1 },
            { name: 'Stock C', price: 300, change: +0.5 },
            { name: 'Stock D', price: 400, change: -0.2 },
            { name: 'Stock C', price: 300, change: +0.5 },
            { name: 'Stock C', price: 300, change: +0.5 },
            { name: 'Stock D', price: 400, change: -0.2 },
            { name: 'Stock D', price: 400, change: -0.2 },
        ];

        // Function to update the stock data
        function updateStockData() {
            const container = document.getElementById('stockContainer');

            // Clear existing stock info cards
            container.innerHTML = '';

            // Create and style stock info cards
            stockData.forEach(stock => {
                const stockDiv = document.createElement('div');
                stockDiv.className = 'stock-info';
                stockDiv.style.margin = '20px';
                stockDiv.style.borderRadius = '16px'; // Modern rounded corners
                stockDiv.style.border = '1px solid #e0e0e0'; // Subtle border
                stockDiv.style.backgroundColor = '#f9f9f9'; // Light background
                stockDiv.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)'; // Soft shadow
                stockDiv.style.transition = 'box-shadow 0.3s ease'; // Smooth hover effect without movement
                stockDiv.style.padding = '10px'; // Increased padding for more spacing
                stockDiv.style.minHeight = '150px'; // Set a minimum height to prevent movement

                // Add hover effect
                stockDiv.onmouseover = () => {
                    stockDiv.style.boxShadow = '0 8px 12px rgba(0, 0, 0, 0.2)';
                };
                stockDiv.onmouseout = () => {
                    stockDiv.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
                };

                stockDiv.innerHTML = `
                    <h2 style="margin: 0; font-size: 1.8em; color: #333; font-weight: bold;">${stock.name}</h2>
                    <p style="margin: 15px 0; font-size: 1.4em; color: #555;">Current Price: <span style="font-weight: bold;">$${stock.price}</span></p>
                    <p style="margin: 15px 0; font-size: 1.4em; color: ${stock.change >= 0 ? '#4caf50' : '#f44336'}; font-weight: bold;">Change: ${stock.change}%</p>
                `;
                container.appendChild(stockDiv);
            });
        }

        // Simulate data updates every 10 seconds
        setInterval(function() {
            // Simulating new random stock data
            stockData.forEach(stock => {
                stock.price += Math.floor(Math.random() * 5) - 2;
                stock.change = parseFloat((Math.random() * 2 - 1).toFixed(2)); // Random change between -1% and +1%
            });
            updateStockData();
        }, 10000);

        // Initial update
        updateStockData();

        document.addEventListener('DOMContentLoaded', () => {
            updateStockData();
        });

        
    </script>

